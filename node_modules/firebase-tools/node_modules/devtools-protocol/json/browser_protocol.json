{
    "version": {
        "major": "1",
        "minor": "3"
    },
    "domains": [
        {
            "domain": "Accessibility",
            "experimental": true,
            "dependencies": [
                "DOM"
            ],
            "types": [
                {
                    "id": "AXNodeId",
                    "description": "Unique accessibility node identifier.",
                    "type": "string"
                },
                {
                    "id": "AXValueType",
                    "description": "Enum of possible property types.",
                    "type": "string",
                    "enum": [
                        "boolean",
                        "tristate",
                        "booleanOrUndefined",
                        "idref",
                        "idrefList",
                        "integer",
                        "node",
                        "nodeList",
                        "number",
                        "string",
                        "computedString",
                        "token",
                        "tokenList",
                        "domRelation",
                        "role",
                        "internalRole",
                        "valueUndefined"
                    ]
                },
                {
                    "id": "AXValueSourceType",
                    "description": "Enum of possible property sources.",
                    "type": "string",
                    "enum": [
                        "attribute",
                        "implicit",
                        "style",
                        "contents",
                        "placeholder",
                        "relatedElement"
                    ]
                },
                {
                    "id": "AXValueNativeSourceType",
                    "description": "Enum of possible native property sources (as a subtype of a particular AXValueSourceType).",
                    "type": "string",
                    "enum": [
                        "figcaption",
                        "label",
                        "labelfor",
                        "labelwrapped",
                        "legend",
                        "rubyannotation",
                        "tablecaption",
                        "title",
                        "other"
                    ]
                },
                {
                    "id": "AXValueSource",
                    "description": "A single source for a computed AX property.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "type",
                            "description": "What type of source this is.",
                            "$ref": "AXValueSourceType"
                        },
                        {
                            "name": "value",
                            "description": "The value of this property source.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "attribute",
                            "description": "The name of the relevant attribute, if any.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "attributeValue",
                            "description": "The value of the relevant attribute, if any.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "superseded",
                            "description": "Whether this source is superseded by a higher priority source.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "nativeSource",
                            "description": "The native markup source for this value, e.g. a <label> element.",
                            "optional": true,
                            "$ref": "AXValueNativeSourceType"
                        },
                        {
                            "name": "nativeSourceValue",
                            "description": "The value, such as a node or node list, of the native source.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "invalid",
                            "description": "Whether the value for this property is invalid.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "invalidReason",
                            "description": "Reason for the value being invalid, if it is.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AXRelatedNode",
                    "type": "object",
                    "properties": [
                        {
                            "name": "backendDOMNodeId",
                            "description": "The BackendNodeId of the related DOM node.",
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "idref",
                            "description": "The IDRef value provided, if any.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "text",
                            "description": "The text alternative of this node in the current context.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AXProperty",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "The name of this property.",
                            "$ref": "AXPropertyName"
                        },
                        {
                            "name": "value",
                            "description": "The value of this property.",
                            "$ref": "AXValue"
                        }
                    ]
                },
                {
                    "id": "AXValue",
                    "description": "A single computed AX property.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "type",
                            "description": "The type of this value.",
                            "$ref": "AXValueType"
                        },
                        {
                            "name": "value",
                            "description": "The computed value of this property.",
                            "optional": true,
                            "type": "any"
                        },
                        {
                            "name": "relatedNodes",
                            "description": "One or more related nodes, if applicable.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXRelatedNode"
                            }
                        },
                        {
                            "name": "sources",
                            "description": "The sources which contributed to the computation of this property.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXValueSource"
                            }
                        }
                    ]
                },
                {
                    "id": "AXPropertyName",
                    "description": "Values of AXProperty name:\n- from 'busy' to 'roledescription': states which apply to every AX node\n- from 'live' to 'root': attributes which apply to nodes in live regions\n- from 'autocomplete' to 'valuetext': attributes which apply to widgets\n- from 'checked' to 'selected': states which apply to widgets\n- from 'activedescendant' to 'owns' - relationships between elements other than parent/child/sibling.",
                    "type": "string",
                    "enum": [
                        "busy",
                        "disabled",
                        "editable",
                        "focusable",
                        "focused",
                        "hidden",
                        "hiddenRoot",
                        "invalid",
                        "keyshortcuts",
                        "settable",
                        "roledescription",
                        "live",
                        "atomic",
                        "relevant",
                        "root",
                        "autocomplete",
                        "hasPopup",
                        "level",
                        "multiselectable",
                        "orientation",
                        "multiline",
                        "readonly",
                        "required",
                        "valuemin",
                        "valuemax",
                        "valuetext",
                        "checked",
                        "expanded",
                        "modal",
                        "pressed",
                        "selected",
                        "activedescendant",
                        "controls",
                        "describedby",
                        "details",
                        "errormessage",
                        "flowto",
                        "labelledby",
                        "owns"
                    ]
                },
                {
                    "id": "AXNode",
                    "description": "A node in the accessibility tree.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "nodeId",
                            "description": "Unique identifier for this node.",
                            "$ref": "AXNodeId"
                        },
                        {
                            "name": "ignored",
                            "description": "Whether this node is ignored for accessibility",
                            "type": "boolean"
                        },
                        {
                            "name": "ignoredReasons",
                            "description": "Collection of reasons why this node is hidden.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXProperty"
                            }
                        },
                        {
                            "name": "role",
                            "description": "This `Node`'s role, whether explicit or implicit.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "name",
                            "description": "The accessible name for this `Node`.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "description",
                            "description": "The accessible description for this `Node`.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "value",
                            "description": "The value for this `Node`.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "properties",
                            "description": "All other properties",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXProperty"
                            }
                        },
                        {
                            "name": "childIds",
                            "description": "IDs for each of this node's child nodes.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXNodeId"
                            }
                        },
                        {
                            "name": "backendDOMNodeId",
                            "description": "The backend ID for the associated DOM node, if any.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "disable",
                    "description": "Disables the accessibility domain."
                },
                {
                    "name": "enable",
                    "description": "Enables the accessibility domain which causes `AXNodeId`s to remain consistent between method calls.\nThis turns on accessibility for the page, which can impact performance until accessibility is disabled."
                },
                {
                    "name": "getPartialAXTree",
                    "description": "Fetches the accessibility node and partial accessibility tree for this DOM node, if it exists.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "nodeId",
                            "description": "Identifier of the node to get the partial accessibility tree for.",
                            "optional": true,
                            "$ref": "DOM.NodeId"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "Identifier of the backend node to get the partial accessibility tree for.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "objectId",
                            "description": "JavaScript object id of the node wrapper to get the partial accessibility tree for.",
                            "optional": true,
                            "$ref": "Runtime.RemoteObjectId"
                        },
                        {
                            "name": "fetchRelatives",
                            "description": "Whether to fetch this nodes ancestors, siblings and children. Defaults to true.",
                            "optional": true,
                            "type": "boolean"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "description": "The `Accessibility.AXNode` for this DOM node, if it exists, plus its ancestors, siblings and\nchildren, if requested.",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "getFullAXTree",
                    "description": "Fetches the entire accessibility tree for the root Document",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "max_depth",
                            "description": "The maximum depth at which descendants of the root node should be retrieved.\nIf omitted, the full tree is returned.",
                            "optional": true,
                            "type": "integer"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "getChildAXNodes",
                    "description": "Fetches a particular accessibility node by AXNodeId.\nRequires `enable()` to have been called previously.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "id",
                            "$ref": "AXNodeId"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "queryAXTree",
                    "description": "Query a DOM node's accessibility subtree for accessible name and role.\nThis command computes the name and role for all nodes in the subtree, including those that are\nignored for accessibility, and returns those that mactch the specified name and role. If no DOM\nnode is specified, or the DOM node does not exist, the command returns an error. If neither\n`accessibleName` or `role` is specified, it returns all the accessibility nodes in the subtree.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "nodeId",
                            "description": "Identifier of the node for the root to query.",
                            "optional": true,
                            "$ref": "DOM.NodeId"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "Identifier of the backend node for the root to query.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "objectId",
                            "description": "JavaScript object id of the node wrapper for the root to query.",
                            "optional": true,
                            "$ref": "Runtime.RemoteObjectId"
                        },
                        {
                            "name": "accessibleName",
                            "description": "Find nodes with this computed name.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "role",
                            "description": "Find nodes with this computed role.",
                            "optional": true,
                            "type": "string"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "description": "A list of `Accessibility.AXNode` matching the specified attributes,\nincluding nodes that are ignored for accessibility.",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "domain": "Animation",
            "experimental": true,
            "dependencies": [
                "Runtime",
                "DOM"
            ],
            "types": [
                {
                    "id": "Animation",
                    "description": "Animation instance.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "id",
                            "description": "`Animation`'s id.",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "description": "`Animation`'s name.",
                            "type": "string"
                        },
                        {
                            "name": "pausedState",
                            "description": "`Animation`'s internal paused state.",
                            "type": "boolean"
                        },
                        {
                            "name": "playState",
                            "description": "`Animation`'s play state.",
                            "type": "string"
                        },
                        {
                            "name": "playbackRate",
                            "description": "`Animation`'s playback rate.",
                            "type": "number"
                        },
                        {
                            "name": "startTime",
                            "description": "`Animation`'s start time.",
                            "type": "number"
                        },
                        {
                            "name": "currentTime",
                            "description": "`Animation`'s current time.",
                            "type": "number"
                        },
                        {
                            "name": "type",
                            "description": "Animation type of `Animation`.",
                            "type": "string",
                            "enum": [
                                "CSSTransition",
                                "CSSAnimation",
                                "WebAnimation"
                            ]
                        },
                        {
                            "name": "source",
                            "description": "`Animation`'s source animation node.",
                            "optional": true,
                            "$ref": "AnimationEffect"
                        },
                        {
                            "name": "cssId",
                            "description": "A unique ID for `Animation` representing the sources that triggered this CSS\nanimation/transition.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AnimationEffect",
                    "description": "AnimationEffect instance",
                    "type": "object",
                    "properties": [
                        {
                            "name": "delay",
                            "description": "`AnimationEffect`'s delay.",
                            "type": "number"
                        },
                        {
                            "name": "endDelay",
                            "description": "`AnimationEffect`'s end delay.",
                            "type": "number"
                        },
                        {
                            "name": "iterationStart",
                            "description": "`AnimationEffect`'s iteration start.",
                            "type": "number"
                        },
                        {
                            "name": "iterations",
                            "description": "`AnimationEffect`'s iterations.",
                            "type": "number"
                        },
                        {
                            "name": "duration",
                            "description": "`AnimationEffect`'s iteration duration.",
                            "type": "number"
                        },
                        {
                            "name": "direction",
                            "description": "`AnimationEffect`'s playback direction.",
                            "type": "string"
                        },
                        {
                            "name": "fill",
                            "description": "`AnimationEffect`'s fill mode.",
                            "type": "string"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "`AnimationEffect`'s target node.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "keyframesRule",
                            "description": "`AnimationEffect`'s keyframes.",
                            "optional": true,
                            "$ref": "KeyframesRule"
                        },
                        {
                            "name": "easing",
                            "description": "`AnimationEffect`'s timing function.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "KeyframesRule",
                    "description": "Keyframes Rule",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "CSS keyframed animation's name.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "keyframes",
                            "description": "List of animation keyframes.",
                            "type": "array",
                            "items": {
                                "$ref": "KeyframeStyle"
                            }
                        }
                    ]
                },
                {
                    "id": "KeyframeStyle",
                    "description": "Keyframe Style",
                    "type": "object",
                    "properties": [
                        {
                            "name": "offset",
                            "description": "Keyframe's time offset.",
                            "type": "string"
                        },
                        {
                            "name": "easing",
                            "description": "`AnimationEffect`'s timing function.",
                            "type": "string"
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "disable",
                    "description": "Disables animation domain notifications."
                },
                {
                    "name": "enable",
                    "description": "Enables animation domain notifications."
                },
                {
                    "name": "getCurrentTime",
                    "description": "Returns the current time of the an animation.",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of animation.",
                            "type": "string"
                        }
                    ],
                    "returns": [
                        {
                            "name": "currentTime",
                            "description": "Current time of the page.",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "getPlaybackRate",
                    "description": "Gets the playback rate of the document timeline.",
                    "returns": [
                        {
                            "name": "playbackRate",
                            "description": "Playback rate for animations on page.",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "releaseAnimations",
                    "description": "Releases a set of animations to no longer be manipulated.",
                    "parameters": [
                        {
                            "name": "animations",
                            "description": "List of animation ids to seek.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ]
                },
                {
                    "name": "resolveAnimation",
                    "description": "Gets the remote object of the Animation.",
                    "parameters": [
                        {
                            "name": "animationId",
                            "description": "Animation id.",
                            "type": "string"
                        }
                    ],
                    "returns": [
                        {
                            "name": "remoteObject",
                            "description": "Corresponding remote object.",
                            "$ref": "Runtime.RemoteObject"
                        }
                    ]
                },
                {
                    "name": "seekAnimations",
                    "description": "Seek a set of animations to a particular time within each animation.",
                    "parameters": [
                        {
                            "name": "animations",
                            "description": "List of animation ids to seek.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "currentTime",
                            "description": "Set the current time of each animation.",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "setPaused",
                    "description": "Sets the paused state of a set of animations.",
                    "parameters": [
                        {
                            "name": "animations",
                            "description": "Animations to set the pause state of.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "paused",
                            "description": "Paused state to set to.",
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "name": "setPlaybackRate",
                    "description": "Sets the playback rate of the document timeline.",
                    "parameters": [
                        {
                            "name": "playbackRate",
                            "description": "Playback rate for animations on page",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "setTiming",
                    "description": "Sets the timing of an animation node.",
                    "parameters": [
                        {
                            "name": "animationId",
                            "description": "Animation id.",
                            "type": "string"
                        },
                        {
                            "name": "duration",
                            "description": "Duration of the animation.",
                            "type": "number"
                        },
                        {
                            "name": "delay",
                            "description": "Delay of the animation.",
                            "type": "number"
                        }
                    ]
                }
            ],
            "events": [
                {
                    "name": "animationCanceled",
                    "description": "Event for when an animation has been cancelled.",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of the animation that was cancelled.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "animationCreated",
                    "description": "Event for each animation that has been created.",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of the animation that was created.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "animationStarted",
                    "description": "Event for animation that has been started.",
                    "parameters": [
                        {
                            "name": "animation",
                            "description": "Animation that was started.",
                            "$ref": "Animation"
                        }
                    ]
                }
            ]
        },
        {
            "domain": "ApplicationCache",
            "experimental": true,
            "dependencies": [
                "Page"
            ],
            "types": [
                {
                    "id": "ApplicationCacheResource",
                    "description": "Detailed application cache resource information.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "url",
                            "description": "Resource url.",
                            "type": "string"
                        },
                        {
                            "name": "size",
                            "description": "Resource size.",
                            "type": "integer"
                        },
                        {
                            "name": "type",
                            "description": "Resource type.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "ApplicationCache",
                    "description": "Detailed application cache information.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "manifestURL",
                            "description": "Manifest URL.",
                            "type": "string"
                        },
                        {
                            "name": "size",
                            "description": "Application cache size.",
                            "type": "number"
                        },
                        {
                            "name": "creationTime",
                            "description": "Application cache creation time.",
                            "type": "number"
                        },
                        {
                            "name": "updateTime",
                            "description": "Application cache update time.",
                            "type": "number"
                        },
                        {
                            "name": "resources",
                            "description": "Application cache resources.",
                            "type": "array",
                            "items": {
                                "$ref": "ApplicationCacheResource"
                            }
                        }
                    ]
                },
                {
                    "id": "FrameWithManifest",
                    "description": "Frame identifier - manifest URL pair.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "frameId",
                            "description": "Frame identifier.",
                            "$ref": "Page.FrameId"
                        },
                        {
                            "name": "manifestURL",
                            "description": "Manifest URL.",
                            "type": "string"
                        },
                        {
                            "name": "status",
                            "description": "Application cache status.",
                            "type": "integer"
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "enable",
                    "description": "Enables application cache domain notifications."
                },
                {
                    "name": "getApplicationCacheForFrame",
                    "description": "Returns relevant application cache data for the document in given frame.",
                    "parameters": [
                        {
                            "name": "frameId",
                            "description": "Identifier of the frame containing document whose application cache is retrieved.",
                            "$ref": "Page.FrameId"
                        }
                    ],
                    "returns": [
                        {
                            "name": "applicationCache",
                            "description": "Relevant application cache data for the document in given frame.",
                            "$ref": "ApplicationCache"
                        }
                    ]
                },
                {
                    "name": "getFramesWithManifests",
                    "description": "Returns array of frame identifiers with manifest urls for each 